---
- block: 
    - name: Add orchestrator key
      apt_key:
        url: "https://packagecloud.io/github/orchestrator/gpgkey"
        state: present

    - name: Add orchestrator repo
      apt_repository:
        repo: deb https://packagecloud.io/github/orchestrator/{{ ansible_distribution | lower }}/ {{ ansible_distribution_release | lower }} main
        state: present

    - name: Install orchestrator necessary packages
      apt: 
        name: ['orchestrator-cli-3.1.2-1.x86_64.rpm','orchestrator-3.1.2-1.x86_64.rpm','curl','jq']
        state: latest
        update_cache: yes
  environment: '{{ proxy_env | default({}) }}'
  when: ansible_os_family == "Debian"
  tags: install_orchestrator

- block:
    - name: Download orchestrator packages
      get_url:
        url: "{{ item }}"
        dest: /root
        mode: 0775
      with_items:
        - https://packagecloud.io/github/orchestrator/packages/el/7/orchestrator-cli-3.1.2-1.x86_64.rpm/download.rpm
        - https://packagecloud.io/github/orchestrator/packages/el/7/orchestrator-3.1.2-1.x86_64.rpm/download.rpm

    - name: Install orchestrator necessary packages
      yum: 
        name: ['orchestrator-cli-3.1.2-1.x86_64.rpm','orchestrator-3.1.2-1.x86_64.rpm','jq']
        state: latest
        update_cache: yes
        
    - name: Fix orchestrator.service cannot boot after host restarts
      file: 
        src: /etc/systemd/system/orchestrator.service
        dest: /etc/systemd/system/multi-user.target.wants/orchestrator.service
        state: link
  environment: '{{ proxy_env | default({}) }}'
  when: ansible_os_family == "RedHat"
  tags: install_orchestrator

- name: Create my.cnf because root user require password on this setup
  template:
    src: my.cnf.j2
    dest: /root/.my.cnf
    owner: root
    group: root
    mode: 0600

- name: Configure orchestrator
  template:
    src: orchestrator.conf.j2
    dest: /etc/orchestrator.conf.json
    owner: root
    group: root
    mode: 0600
  notify: restart orchestrator

- meta: flush_handlers

- name: Install orchestrator-client
  copy:
    src: orchestrator-client
    dest: /usr/bin/orchestrator-client
    mode: 0755

- name: Add first mysql server into orchestrator
  shell: orchestrator-client -c discover -i {{ groups['mysql'][0] }}:{{ mysql_port }}
